{"version":3,"sources":["api.ts","Components/Form/Select/index.tsx","Components/Form/TextArea/index.tsx","Hooks/useFetch.ts","Hooks/useForm.ts","Components/Compiler/index.tsx","App.tsx","index.tsx"],"names":["API_URL","GET_LANGUAGES","url","options","method","POST_SUBMISSION","submission","headers","body","JSON","stringify","Select","label","name","value","onChange","error","className","htmlFor","id","required","map","TextArea","rows","disabled","onKeyDown","event","key","preventDefault","textarea","selectionStart","selectionEnd","start","end","append","substring","join","length","handleIndentation","target","useFetch","React","useState","data","setData","setError","loading","setLoading","request","useCallback","a","fetch","response","json","ok","Error","message","useForm","setValue","validate","onBlur","Compiler","languages","setLanguages","language","code","stdin","stdout","setStdout","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","b64_to_utf8","decodeURIComponent","escape","atob","changeTab","tabName","someTabTriggerEl","document","querySelector","bootstrap","Tab","show","every","fn","source_code","language_id","Number","compile_output","stderr","useEffect","fetchLanguages","lang","role","type","onClick","App","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.262892da.chunk.js","sourcesContent":["import { Submission } from './Models/Submission'\n\n\nconst API_URL = 'https://ce.judge0.com'\n\n\nexport function GET_LANGUAGES(){\n    return {\n        url: `${API_URL}/languages`,\n        options: {\n\t\t\tmethod: 'GET',\n\t\t}\n    }\n}\n\n\nexport function POST_SUBMISSION(submission: Submission){\n    return {\n        url: `${API_URL}/submissions/?base64_encoded=true&wait=true`,\n        options: {\n            method: 'POST',\n            headers: {\n\t\t\t\t'Content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(submission)\n        }\n    }\n}\n","import React from 'react'\n\n\ninterface Option {\n    value: string | number\n    label: string\n}\n\n\ninterface SelectProps {\n    options: Option[]\n    label: string\n    name: string\n    value: string\n    onChange: (...a: any) => void\n    error: string | null\n}\n\n\nconst Select: React.FC<SelectProps> = ({ options, label, name, value, onChange, error }) => {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={name} className=\"form-label\">{label}</label>\n            <select value={value} onChange={onChange} className=\"form-select\" id={name} required>\n                {\n                    options.map(({ value, label }) => <option key={value} value={value}>{label}</option>)\n                }\n            </select>\n            {error && <p className=\"text-danger\">{error}</p>}\n        </div>\n    )\n}\n\nexport default Select\n","import React, {KeyboardEvent} from \"react\"\n\n\ninterface TextAreaProps {\n    label: string\n    name: string\n    value: string\n    onChange?: (...params: any) => void\n    error?: string | null\n    rows: number\n    disabled?: boolean,\n    className?: string\n}\n\n\nfunction TextArea({ label, name, value, onChange, error, rows, disabled, className }: TextAreaProps) {\n    function handleIndentation(textarea: HTMLTextAreaElement) {\n        const [start, end] = [textarea.selectionStart, textarea.selectionEnd]\n        const append = \"      \"\n        textarea.value = [\n            textarea.value.substring(0, start),\n            append,\n            textarea.value.substring(end)\n        ].join('')\n        textarea.selectionStart = textarea.selectionEnd = start + append.length;\n    }\n\n    function handleKeyDown(event: KeyboardEvent<HTMLTextAreaElement>) {\n        if (event.key === 'Tab') {\n            event.preventDefault()\n            handleIndentation(event.target as HTMLTextAreaElement)\n        }\n    }\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={name} className=\"form-label\">{label}</label>\n            <textarea onKeyDown={handleKeyDown} disabled={disabled} value={value} onChange={onChange} className={'form-control ' + className } id={name} rows={rows}></textarea>\n            {error && <p className=\"text-danger\">{error}</p>}\n        </div>\n    )\n}\n\nexport default TextArea\n","import React from \"react\"\n\n\nfunction useFetch() {\n\tconst [data, setData] = React.useState<string | null>(null)\n\tconst [error, setError] = React.useState<string | null>(null)\n\tconst [loading, setLoading] = React.useState<boolean>(false)\n\n\tconst request = React.useCallback(async (url: string, options: any) => {\n\t\tlet response, json\n\t\ttry {\n\t\t\tsetError(null)\n\t\t\tsetLoading(true)\n\t\t\tresponse = await fetch(url, options)\n\t\t\tjson = await response.json()\n\t\t\tif (response.ok === false) throw new Error(json.message)\n\t\t} catch (err) {\n\t\t\tjson = null\n\t\t\tsetError((err as any).message)\n\t\t} finally {\n\t\t\tsetData(json)\n\t\t\tsetLoading(false)\n\t\t\treturn { response, json }\n\t\t}\n\t}, [])\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading,\n\t\trequest\n\t}\n}\n\nexport default useFetch\n","import React from 'react'\n\n\nconst useForm = () => {\n\tconst [value, setValue] = React.useState<string>('')\n\tconst [error, setError] = React.useState<string|null>(null)\n\n\tfunction validate(value: string) {\n\n\t\tif(value.length === 0){\n\t\t\tsetError('Preencha um valor.')\n\t\t\treturn false\n\t\t}\n\t\telse{\n\t\t\tsetError(null)\n\t\t\treturn true\n\t\t}\n\t}\n\n\tfunction onChange({target}: any){\n\t\tif(error) validate(target.value)\n\t\tsetValue(target.value)\n\t}\n\n\treturn {\n\t\tvalue,\n\t\tsetValue,\n\t\tonChange,\n\t\terror,\n\t\tvalidate: () => validate(value),\n\t\tonBlur: () => validate(value)\n\t}\n}\n\nexport default useForm\n","import React from 'react'\nimport { GET_LANGUAGES, POST_SUBMISSION } from '../../api'\nimport Select from '../Form/Select'\nimport TextArea from '../Form/TextArea'\nimport useFetch from '../../Hooks/useFetch'\nimport useForm from '../../Hooks/useForm'\nimport { Language } from '../../Models/Language'\nimport { Submission } from '../../Models/Submission'\n\ndeclare var bootstrap: any\n\ninterface StdoutState {\n    message: string,\n    error: boolean\n}\n\nconst Compiler: React.FC = () => {\n    const { request, loading } = useFetch()\n\n    const [languages, setLanguages] = React.useState<Language[]>([])\n    const language = useForm()\n    const code = useForm()\n    const stdin = useForm()\n    const [stdout, setStdout] = React.useState<StdoutState>({ message: '', error: false })\n\n    function utf8_to_b64(str: string) {\n        return window.btoa(unescape(encodeURIComponent(str)))\n    }\n\n    function b64_to_utf8(str: string) {\n        return decodeURIComponent(escape(window.atob(str)))\n    }\n\n    function changeTab(tabName: string){\n        const someTabTriggerEl = document.querySelector(`#${tabName}`)\n        const tab = new bootstrap.Tab(someTabTriggerEl)\n        tab.show()\n    }\n\n    async function handleSubmit() {\n        const isValid = [language.validate, code.validate].every(fn => fn())\n        if (!isValid) return\n\n        const { url, options } = POST_SUBMISSION({\n            source_code: utf8_to_b64(code.value),\n            language_id: Number(language.value),\n            stdin: utf8_to_b64(stdin.value)\n        })\n        const { json } = await request(url, options)\n        const submission = json as Submission\n\n\n        if (submission.compile_output) {\n            setStdout({\n                message: `Error: ${b64_to_utf8(submission.compile_output)}`,\n                error: true\n            })\n        }\n        else if (submission.stderr) {\n            setStdout({\n                message: `Error: ${b64_to_utf8(submission.stderr)}`,\n                error: true\n            })\n        }\n        else {\n            setStdout({\n                message: b64_to_utf8(submission.stdout!),\n                error: false\n            })\n        }\n        changeTab('nav-output-tab')\n    }\n\n\n    React.useEffect(() => {\n        async function fetchLanguages() {\n            const { url, options } = GET_LANGUAGES()\n            const { json } = await request(url, options)\n            setLanguages(json as Language[])\n        }\n        fetchLanguages()\n    }, [request])\n\n    return (\n        <div>\n            <Select\n                options={languages.map((lang) => ({ value: lang.id, label: lang.name }))}\n                label=\"Linguagem\"\n                name=\"language\"\n                value={language.value}\n                onChange={language.onChange}\n                error={language.error}\n            />\n            <TextArea label=\"Código\" name=\"code\" value={code.value} onChange={code.onChange} error={code.error} rows={10} />\n\n            <nav>\n                <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <button className=\"nav-link active\" id=\"nav-input-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-input\" type=\"button\" role=\"tab\" aria-controls=\"nav-input\" aria-selected=\"true\">Input</button>\n                    <button className=\"nav-link\" id=\"nav-output-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-output\" type=\"button\" role=\"tab\" aria-controls=\"nav-output\" aria-selected=\"false\">Output</button>\n                </div>\n            </nav>\n            <div className=\"tab-content\" id=\"nav-tabContent\">\n                <div className=\"tab-pane fade show active\" id=\"nav-input\" role=\"tabpanel\" aria-labelledby=\"nav-input-tab\">\n                    <TextArea label=\"\" name=\"input\" value={stdin.value} onChange={stdin.onChange} error={stdin.error} rows={5} />\n                </div>\n                <div className=\"tab-pane fade\" id=\"nav-output\" role=\"tabpanel\" aria-labelledby=\"nav-output-tab\">\n                    <TextArea disabled={true} className={stdout.error ? 'text-danger' : ''} label=\"\" name=\"output\" value={stdout.message} rows={5} />\n                </div>\n            </div>\n\n            <div className=\"row mt-4\">\n                {!loading ? (\n                    <button onClick={handleSubmit} className=\"btn btn-lg btn-primary\">Executar</button>\n                ) : (\n                    <button disabled={true} className=\"btn btn-lg btn-primary\">Carregando...</button>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Compiler\n","import React from 'react';\nimport Compiler from './Components/Compiler';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <div className=\"App container my-5\">\n                        <div className=\"row d-flex justify-content-center\">\n                            <div className=\"col-6 text-center\">\n                                <h1 className=\"mb-5\">GRUB - Online Compiler</h1>\n                                <Compiler />\n                            </div>\n                        </div>\n                    </div>\n                </Route>\n                <Route path='/iframe' exact>\n                    <Compiler />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}