{"version":3,"sources":["Components/Form/Select/index.tsx","Hooks/useFetch.ts","Hooks/useForm.ts","Components/Form/TextArea/index.tsx","api.ts","App.tsx","index.tsx"],"names":["Select","options","label","name","value","onChange","error","className","htmlFor","id","required","map","useFetch","React","useState","data","setData","setError","loading","setLoading","request","useCallback","url","a","fetch","response","json","ok","Error","message","useForm","setValue","validate","length","target","onBlur","TextArea","rows","disabled","API_URL","GET_LANGUAGES","method","POST_SUBMISSION","submission","headers","body","JSON","stringify","App","languages","setLanguages","language","code","stdin","stdout","setStdout","utf8_to_b64","str","window","btoa","unescape","encodeURIComponent","b64_to_utf8","decodeURIComponent","escape","atob","changeTab","tabName","someTabTriggerEl","document","querySelector","bootstrap","Tab","show","every","fn","source_code","language_id","Number","compile_output","stderr","useEffect","fetchLanguages","lang","role","type","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1c07a92.chunk.js","sourcesContent":["import React from 'react'\n\n\ninterface Option {\n    value: string | number\n    label: string\n}\n\n\ninterface SelectProps {\n    options: Option[]\n    label: string\n    name: string\n    value: string\n    onChange: (...a: any) => void\n    error: string | null\n}\n\n\nfunction Select({ options, label, name, value, onChange, error }: SelectProps) {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={name} className=\"form-label\">{label}</label>\n            <select value={value} onChange={onChange} className=\"form-select\" id={name} required>\n                {\n                    options.map(({ value, label }) => <option key={value} value={value}>{label}</option>)\n                }\n            </select>\n            {error && <p className=\"text-danger\">{error}</p>}\n        </div>\n    )\n}\n\nexport default Select\n","import React from \"react\"\n\n\nfunction useFetch() {\n\tconst [data, setData] = React.useState<string | null>(null)\n\tconst [error, setError] = React.useState<string | null>(null)\n\tconst [loading, setLoading] = React.useState<boolean>(false)\n\n\tconst request = React.useCallback(async (url: string, options: any) => {\n\t\tlet response, json\n\t\ttry {\n\t\t\tsetError(null)\n\t\t\tsetLoading(true)\n\t\t\tresponse = await fetch(url, options)\n\t\t\tjson = await response.json()\n\t\t\tif (response.ok === false) throw new Error(json.message)\n\t\t} catch (err) {\n\t\t\tjson = null\n\t\t\tsetError((err as any).message)\n\t\t} finally {\n\t\t\tsetData(json)\n\t\t\tsetLoading(false)\n\t\t\treturn { response, json }\n\t\t}\n\t}, [])\n\n\treturn {\n\t\tdata,\n\t\terror,\n\t\tloading,\n\t\trequest\n\t}\n}\n\nexport default useFetch\n","import React from 'react'\n\n\nconst useForm = () => {\n\tconst [value, setValue] = React.useState<string>('')\n\tconst [error, setError] = React.useState<string|null>(null)\n\n\tfunction validate(value: string) {\n\n\t\tif(value.length === 0){\n\t\t\tsetError('Preencha um valor.')\n\t\t\treturn false\n\t\t}\n\t\telse{\n\t\t\tsetError(null)\n\t\t\treturn true\n\t\t}\n\t}\n\n\tfunction onChange({target}: any){\n\t\tif(error) validate(target.value)\n\t\tsetValue(target.value)\n\t}\n\n\treturn {\n\t\tvalue,\n\t\tsetValue,\n\t\tonChange,\n\t\terror,\n\t\tvalidate: () => validate(value),\n\t\tonBlur: () => validate(value)\n\t}\n}\n\nexport default useForm\n","import React from \"react\"\n\n\ninterface TextAreaProps {\n    label: string\n    name: string\n    value: string\n    onChange?: (...params: any) => void\n    error?: string | null\n    rows: number\n    disabled?: boolean,\n    className?: string\n}\n\n\nfunction TextArea({ label, name, value, onChange, error, rows, disabled, className }: TextAreaProps) {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={name} className=\"form-label\">{label}</label>\n            <textarea disabled={disabled} value={value} onChange={onChange} className={'form-control ' + className } id={name} rows={rows}></textarea>\n            {error && <p className=\"text-danger\">{error}</p>}\n        </div>\n    )\n}\n\nexport default TextArea\n","import { Submission } from './Models/Submission'\n\n\nconst API_URL = 'https://ce.judge0.com'\n\n\nexport function GET_LANGUAGES(){\n    return {\n        url: `${API_URL}/languages`,\n        options: {\n\t\t\tmethod: 'GET',\n\t\t}\n    }\n}\n\n\nexport function POST_SUBMISSION(submission: Submission){\n    return {\n        url: `${API_URL}/submissions/?base64_encoded=true&wait=true`,\n        options: {\n            method: 'POST',\n            headers: {\n\t\t\t\t'Content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(submission)\n        }\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Select from './Components/Form/Select';\nimport useFetch from './Hooks/useFetch';\nimport useForm from './Hooks/useForm';\nimport TextArea from './Components/Form/TextArea';\nimport { Language } from './Models/Language';\nimport { Submission } from './Models/Submission'\nimport { GET_LANGUAGES, POST_SUBMISSION } from './api'\n\ndeclare var bootstrap: any\n\n\ninterface StdoutState {\n    message: string,\n    error: boolean\n}\n\n\nfunction App() {\n    const { request, loading } = useFetch()\n\n    const [languages, setLanguages] = React.useState<Language[]>([])\n    const language = useForm()\n    const code = useForm()\n    const stdin = useForm()\n    const [stdout, setStdout] = React.useState<StdoutState>({ message: '', error: false })\n\n    function utf8_to_b64(str: string) {\n        return window.btoa(unescape(encodeURIComponent(str)))\n    }\n\n    function b64_to_utf8(str: string) {\n        return decodeURIComponent(escape(window.atob(str)))\n    }\n\n    function changeTab(tabName: string){\n        const someTabTriggerEl = document.querySelector(`#${tabName}`)\n        const tab = new bootstrap.Tab(someTabTriggerEl)\n        tab.show()\n    }\n\n    async function handleSubmit() {\n        const isValid = [language.validate, code.validate].every(fn => fn())\n        if (!isValid) return\n\n        const { url, options } = POST_SUBMISSION({\n            source_code: utf8_to_b64(code.value),\n            language_id: Number(language.value),\n            stdin: utf8_to_b64(stdin.value)\n        })\n        const { json } = await request(url, options)\n        const submission = json as Submission\n\n\n        if (submission.compile_output) {\n            setStdout({\n                message: `Error: ${b64_to_utf8(submission.compile_output)}`,\n                error: true\n            })\n        }\n        else if (submission.stderr) {\n            setStdout({\n                message: `Error: ${b64_to_utf8(submission.stderr)}`,\n                error: true\n            })\n        }\n        else {\n            setStdout({\n                message: b64_to_utf8(submission.stdout!),\n                error: false\n            })\n        }\n        changeTab('nav-output-tab')\n    }\n\n\n    React.useEffect(() => {\n        async function fetchLanguages() {\n            const { url, options } = GET_LANGUAGES()\n            const { json } = await request(url, options)\n            setLanguages(json as Language[])\n        }\n        fetchLanguages()\n    }, [request])\n\n\n    return (\n        <div className=\"App container my-5\">\n            <div className=\"row d-flex justify-content-center\">\n                <div className=\"col-6 text-center\">\n                    <h1 className=\"mb-5\">GRUB - Online Compiler</h1>\n                    <Select\n                        options={languages.map((lang) => ({ value: lang.id, label: lang.name }))}\n                        label=\"Linguagem\"\n                        name=\"language\"\n                        value={language.value}\n                        onChange={language.onChange}\n                        error={language.error}\n                    />\n                    <TextArea label=\"Código\" name=\"code\" value={code.value} onChange={code.onChange} error={code.error} rows={10} />\n\n                    <nav>\n                        <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                            <button className=\"nav-link active\" id=\"nav-input-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-input\" type=\"button\" role=\"tab\" aria-controls=\"nav-input\" aria-selected=\"true\">Input</button>\n                            <button className=\"nav-link\" id=\"nav-output-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-output\" type=\"button\" role=\"tab\" aria-controls=\"nav-output\" aria-selected=\"false\">Output</button>\n                        </div>\n                    </nav>\n                    <div className=\"tab-content\" id=\"nav-tabContent\">\n                        <div className=\"tab-pane fade show active\" id=\"nav-input\" role=\"tabpanel\" aria-labelledby=\"nav-input-tab\">\n                            <TextArea label=\"\" name=\"input\" value={stdin.value} onChange={stdin.onChange} error={stdin.error} rows={5} />\n                        </div>\n                        <div className=\"tab-pane fade\" id=\"nav-output\" role=\"tabpanel\" aria-labelledby=\"nav-output-tab\">\n                            <TextArea disabled={true} className={stdout.error ? 'text-danger' : ''} label=\"\" name=\"output\" value={stdout.message} rows={5} />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-4\">\n                        {!loading ? (\n                            <button onClick={handleSubmit} className=\"btn btn-lg btn-primary\">Executar</button>\n                        ) : (\n                            <button disabled={true} className=\"btn btn-lg btn-primary\">Carregando...</button>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}